plugins {
    id 'io.spring.dependency-management' version "${spring_dependency_management}"
    id 'maven-publish'
    id 'java'
    id 'jacoco'
}

group = 'com.senior.cyber.frmk'
version = '1.0.0'

java {
    sourceCompatibility = "$java_version"
    targetCompatibility = "$java_version"
    withSourcesJar()
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacoco {
    toolVersion = "0.8.9"
}

repositories {
    mavenLocal()
    mavenCentral()
    // maven {
    //     url "$nexus_url/maven-public/"
    //     allowInsecureProtocol = true
    // }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    // repositories {
    //     maven {
    //         credentials {
    //             username = "$nexus_uid"
    //             password = "$nexus_pwd"
    //         }
    //         url = "$nexus_url/maven-releases/"
    //         allowInsecureProtocol = true
    //     }
    // }
}

dependencies {
    implementation project(":jdbc-query")
    implementation "com.google.code.gson:gson:${gson}"
    implementation "org.apache.poi:poi-ooxml:${poi}"
    implementation "org.apache.poi:poi:${poi}"
    implementation "joda-time:joda-time:${joda_time}"
    implementation "org.apache.commons:commons-text:${commons_text}"
    implementation "org.reflections:reflections:${reflections}"
    implementation "org.springframework.boot:spring-boot-autoconfigure:${spring_boot}"
    implementation "org.springframework.boot:spring-boot:${spring_boot}"
    implementation "org.springframework:spring-web:${spring}"
    implementation "org.springframework:spring-beans:${spring}"
    implementation "org.apache.commons:commons-lang3:${commons_lang3}"
    implementation "org.apache.wicket:wicket-core:${wicket}"
    implementation "org.apache.wicket:wicket-extensions:${wicket}"
    implementation "org.apache.wicket:wicket-auth-roles:${wicket}"
    implementation "com.google.guava:guava:${guava}"
    implementation "org.bouncycastle:bcprov-jdk15to18:${bouncycastle}"
    implementation "org.bouncycastle:bcpkix-jdk15to18:${bouncycastle}"
    implementation "org.bouncycastle:bcpg-jdk15to18:${bouncycastle}"
    implementation "org.springframework.boot:spring-boot-starter-web:${spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-aop:${spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-jdbc:${spring_boot}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${spring_boot}"
    implementation "org.apache.httpcomponents:httpclient:${httpclient}"
    compileOnly "jakarta.servlet:jakarta.servlet-api:${servlet}"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${spring_boot}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${spring_boot}"
}

tasks.named('test') {
    useJUnitPlatform()
}